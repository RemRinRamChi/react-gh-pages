{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png","../node_modules/moment/src/lib/locale sync","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Cards","data","confirmed","active","recovered","deaths","lastUpdate","cardData","title","value","description","class","styles","infected","className","container","Grid","justify","map","cData","i","item","key","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","extractedData","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","target","App","state","fetchedData","setState","this","image","src","covidImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1d6cc20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2N84r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2qKWU\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 162;","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, active, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading ... \";\r\n  }\r\n\r\n  let cardData = [\r\n    {\r\n      title: \"Confirmed\",\r\n      value: confirmed.value,\r\n      description: \"Number of confirmed cases of COVID-19\",\r\n      class: styles.infected,\r\n    },\r\n    {\r\n      title: \"Active\",\r\n      value: active.value,\r\n      description: \"Number of active cases of COVID-19\",\r\n      class: styles.active,\r\n    },\r\n    {\r\n      title: \"Recovered\",\r\n      value: recovered.value,\r\n      description: \"Number of recoveries of COVID-19\",\r\n      class: styles.recovered,\r\n    },\r\n    {\r\n      title: \"Deaths\",\r\n      value: deaths.value,\r\n      description: \"Number of deaths caused by COVID-19\",\r\n      class: styles.deaths,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container justify=\"center\">\r\n        {\r\n          cardData.map((cData, i) => (\r\n            <Grid item key={i} component={Card} xs={12} md={2} className={cx(styles.card, cData.class)}>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>{cData.title}</Typography>\r\n                <Typography variant=\"h5\">\r\n                  <CountUp start={0} end={cData.value} duration={2.5} separator=\",\"/>\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  {cData.description}\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          ))\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n\r\n    const extractedData = {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      active: {\r\n        value: confirmed.value - recovered.value - deaths.value,\r\n      },\r\n      lastUpdate,\r\n    };\r\n\r\n    return extractedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    \r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }))\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n    \r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error); \r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, active, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    }\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: ['Infected', 'Active', 'Redovered', 'Deaths'],\r\n        datasets: [{\r\n          label: 'People',\r\n          backgroundColor: [\r\n            'rgba(0, 0, 255, 0.5)',\r\n            'rgba(255, 230, 50, 0.5)',\r\n            'rgba(0, 255, 0, 0.5)',\r\n            'rgba(255, 0, 0, 0.5)',\r\n          ],\r\n          data: [confirmed.value, active.value, recovered.value, deaths.value]\r\n        }]\r\n      }}\r\n      options={{\r\n        legend: {display: false},\r\n        title: {display: true, text: `Current state in ${country}`}\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>{country}</option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );  \r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\"; // immediately goes to search for index file\r\n\r\nimport covidImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n  // ok to not have \"constructor\", this is the equivalent\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={covidImage} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\"; // only needed in this file\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\")); // render in the public/index.html file\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2cPob\",\"card\":\"Cards_card__FMPjM\",\"infected\":\"Cards_infected__1IGkc\",\"active\":\"Cards_active__3k9Ok\",\"recovered\":\"Cards_recovered__qHH7_\",\"deaths\":\"Cards_deaths__GA66h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Jyj-\",\"image\":\"App_image__3KK3C\"};"],"sourceRoot":""}